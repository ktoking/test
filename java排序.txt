package kai;

import java.util.Arrays;

public class kaikai {

	public static void main(String[] args) {
		
		final int N =10;
		int[] nums = new int[N];
		int[] nums1 = new int[N];
		int[] nums2 = new int[N];
		for (int i = 0; i < nums.length; i++) {
			nums[i] = (int) (Math.random()*100);
			nums1[i] = (int) (Math.random()*100);
			nums2[i] = (int) (Math.random()*100);
		}
		
		//¿ìËÙÅÅĞò
		System.out.println("Quick sort numbers2 are :");
		for (int i = 0; i < nums2.length; i++) {
			System.out.print(nums2[i]+", ");
		}
		System.out.println();
		Arrays.sort(nums2);
		System.out.println("Quick sort changed are :");
		for (int i = 0; i < nums2.length; i++) {
			System.out.print(nums2[i]+", ");
		}
		System.out.println();
		
		//Ã°ÅİÅÅĞò
		System.out.println("the float original numbers are :");
		for (int i = 0; i < nums.length; i++) {
			System.out.print(nums[i]+", ");
		}
		for (int i = 0; i < nums.length-1; i++) {
			for (int j = 0; j < nums.length-i-1; j++) {
				if (nums[j]>nums[j+1]) {
					int temp = nums[j];
					nums[j]	 = nums[j+1];
					nums[j+1]=temp;
				}
			}
		}
		System.out.println();
		System.out.println("the changed numbers are :");
		for (int i = 0; i < nums.length; i++) {
			System.out.print(nums[i]+", ");
		}
		System.out.println();
		
		
		//Ñ¡ÔñÅÅĞò
		System.out.println("the select original numbers are :");
		for (int i = 0; i < nums1.length; i++) {
			System.out.print(nums1[i]+", ");
		}
		for (int i = 0; i < nums1.length; i++) {
			int min = nums1[i];
			int minindex = i;
			for (int j = i+1; j < nums1.length; j++) {
				if(min > nums1[j]) {
					min = nums1[j];
					minindex = j;
				}
			}
			int temp = nums1[i];
			nums1[i] = nums1[minindex];
			nums1[minindex]=temp;
		}
		System.out.println();
		System.out.println("the select changed numbers are :");
		for (int i = 0; i < nums1.length; i++) {
			System.out.print(nums1[i]+", ");
		}
		System.out.println();
		
		//¶ş·Ö·¨²éÕÒ
		int[]nums11= {1,2,3,6,7,9,21,32,43};
		int searchnumber = 9;
		int low = 0;
		int height = nums11.length-1;
		System.out.println("1/2way:");
		while(height >= low) {
			int mid = (low + height)/2;
			if(searchnumber > nums11[mid]) {
				low = mid +1;
			}else if(searchnumber < nums11[mid]) {
				height = mid - 1;
			}else {
				System.out.println("find it!"+nums11[mid]);
				break;
			}
		
		}
		
		
		
	}
}
